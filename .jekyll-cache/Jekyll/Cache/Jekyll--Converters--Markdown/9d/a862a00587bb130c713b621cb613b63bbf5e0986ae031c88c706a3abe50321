I"Ç<p>In a hash table, queries are <a class="internal-link" href="/secondbrain/one-hot-encodings-are-basis-vectors-in-type-space">hashed</a> and then matched against existing keys in efficient ways. However, vanilla hash tables are still <a class="internal-link" href="/secondbrain/memory-can-be-content-based-or-location-based">location-based</a> storage, because the key semantics are ignored. However, if one hashed keys using <a class="internal-link" href="/secondbrain/embeddings-in-machine-learning-represent-prototypes-or-exemplars">semantic embeddings</a>, one could <a class="internal-link" href="/secondbrain/spatial-metaphors-provide-primitives-for-latent-space-navigation">look for close keys in semantic space</a>. In this, semantic hash tables enable fuzzy key-value storage. Just like hash tables could be <a class="internal-link" href="/secondbrain/distributed-emulation-network-enables-collective-ia">distributed</a>, so might semantic hash tables.</p>
:ET